swagger: "2.0"
info:
  description: "Le service doit exposer des routes pour ajouter/modifier/supprimer/consulter la fiche d’un utilisateur. Il doit aussi etre possible de lister l’ensemble des utilisateurs. Toutes les routes prennent en argument ou envoient comme réponse des documents json."
  version: "1.0.0"
  title: "Services RESTful avec Jersey"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "serigne-amsatou.seye@etu.u-bordeaux.fr"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
basePath: "/jersey"
tags:
- name: "users"
  description: "Retrieve an user in JSON format"
schemes:
- "http"
paths:
  /users/add:
    post:
      tags:
      - "users"
      summary: "Create a new user"
      description: "This can be done by anyone"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "User added successfully"
  /users/get:
    post:
      tags:
      - "users"
      summary: "Get user by id"
      description: "This can be done by anyone"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "id"
        description: "Created user object"
        required: true
        schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid user object supplied"
        404:
          description: "User not found"
  /users/update:
    post:
      tags:
      - "users"
      summary: "Update user"
      description: "This can be done by anyone"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "user"
        description: "Created user object"
        required: true
        schema:
            $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
  /users/delete:
    post:
      tags:
      - "users"
      summary: "Delete user"
      description: ""
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "id"
        description: "Created user object"
        required: true
        schema:
            $ref: "#/definitions/User"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
  /users/list:
    post:
      tags:
      - "users"
      summary: "Get all users"
      description: "This can be done by anyone."
      produces:
      - "application/json"
      responses:
        default:
          description: "successful operation"
          

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"